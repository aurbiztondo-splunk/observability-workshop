<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Digital Experience Monitoring (DEM) on Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/index.html</link><description>Recent content in Digital Experience Monitoring (DEM) on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding DEM</title><link>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/01-dem-context/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/01-dem-context/index.html</guid><description>DEM = Digital Experience Monitoring:
What are your end users doing?
Do you know how they&amp;rsquo;re interacting with your app, what the performance is, what errors are occuring, and why?
How do your third party services impact the end user?
When do you find out about user-impacting issues - how fast are they addressed, and how does this affect your internal teams?
How does all of this affect your business?</description></item><item><title>RUM</title><link>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/02-rum/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/02-rum/index.html</guid><description>Open https://frothly.notsplunktshirtco.com/ on your laptop and mobile devices.
Navigate around the site. Add some items to your cart and &amp;ldquo;check out&amp;rdquo; (don&amp;rsquo;t worry, you&amp;rsquo;re not being charged!)
What&amp;rsquo;s the experience like?
Go to RUM in Splunk Observability.
What are the Web Vitals and their values for the Frothly app? Click LCP to see it in Tag Spotlight. Which city has visited the app the most in the past 15 minutes? Which browser version has visited the app the most in the past 15 minutes?</description></item><item><title>Synthetics</title><link>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/03-synthetics/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/03-synthetics/index.html</guid><description>We can see how RUM helpfully captures what end users are experiencing. What&amp;rsquo;s a drawback to only using RUM?
Now let&amp;rsquo;s create some Synthetic tests. You can use any public website, including the workshop demo site, or your own business site - just remember that everyone in this workshop org will see the results!
Go to Synthetics in Observability Click &amp;ldquo;Add new &amp;gt; Browser Test&amp;rdquo; Name the test with three initials that identify you and high level info about the test For example, &amp;ldquo;[sitename] SEW Home Desktop US&amp;rdquo; Enter the URL, locations, device type, frequency, and Save.</description></item><item><title>Synthetics Review</title><link>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/04-synthetics-review/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/04-synthetics-review/index.html</guid><description>What do the results look like so far? How might this testing be beneficial? Does this spark ideas for more testing? Click on a run result for our Frothly test and see the relevant RUM data in the right sidebar. How does the Synthetics data compare to RUM? When could comparing Synthetics results to RUM data be helpful? Why is there a difference between what you see in RUM and Synthetics?</description></item><item><title>Dashboards - Trends and Comparisons</title><link>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/05-dashboard/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/05-dashboard/index.html</guid><description>Go to the Web Vitals Comparison dashboard.
Click the three dots on the top right and click &amp;ldquo;Save As&amp;rdquo; Name the Dashboard starting with your three intitials, e.g. &amp;ldquo;SEW Web Vitals Comparison&amp;rdquo;
Save to your dashboard group.
Change the filter to include tests with your initials, and click &amp;ldquo;save&amp;rdquo;:
Look at the table chart, and sort by different metrics. How do your different tests compare?
What are you doing well? What improvements could be made?</description></item><item><title>Detectors</title><link>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/06-detectors/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/06-detectors/index.html</guid><description>Now that we have seen trends and changes, let&amp;rsquo;s make it easier to know when something unexpected happens.
Create a detector based on the LCP chart on your dashboard.
When you get to the Alert Settings step, change the time frame to -1d and wait for the alert preview to see how you might want to adjust the settings to get more or less alert noise.
Proceed through the alert setup to see what options are available.</description></item><item><title>Optimization</title><link>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/07-optimization/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/07-optimization/index.html</guid><description>Now that we&amp;rsquo;ve seen both real user and synthetic performance information &amp;ndash; how do we actually make improvements?
Go to Splunk Web Optimization. This is an optimization scan on our own splunk.com website.
Here we see performance data as well as some web best practices to improve. Follow along as we take a tour.
Click the &amp;ldquo;i&amp;rdquo; icon on the top right to see how the test was configured. Similar to our Synthetic Browser Tests, right?</description></item><item><title>What's next?</title><link>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/08-next/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.100/en/conf/dem/08-next/index.html</guid><description>Check out relevant .conf23 sessions! Search the schedule and add to your agenda or &amp;ldquo;favorite&amp;rdquo;:
OBS1437B: Building a culture of performance to optimize digital experiences – Tuesday 4:15PM OBS1709B: Testing behind the firewalls - a Synthetics deep dive discussion – Wednesday 9:00AM OBS1925B: A day in the life of a Developer with SplunkⓇ Observability Cloud – Wednesday 9:00AM OBS1796B: Take the guesswork out of your day with SplunkⓇ RUM Session Replay – Wednesday 1:45PM Request a demo or trial.</description></item></channel></rss>