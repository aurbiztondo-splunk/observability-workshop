<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Newbie to Ninja - OpenTelemetry Collector on Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/index.html</link><description>Recent content in Newbie to Ninja - OpenTelemetry Collector on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/index.xml" rel="self" type="application/rss+xml"/><item><title>Installing OpenTelemetry Collector Contrib</title><link>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/1-installation/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/1-installation/index.html</guid><description>1. Downloading the OpenTelemetry Collector Contrib distribution Obtain the .deb package for your platform from the OpenTelemetry Collector Contrib releases page
wget https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.75.0/otelcol-contrib_0.75.0_linux_amd64.deb 2. Installing the OpenTelemetry Collector Contrib distribution Install the .deb package using dpkg:
Install dpkg Output sudo dpkg -i otelcol-contrib_0.75.0_linux_amd64.deb Selecting previously unselected package otelcol-contrib. (Reading database ... 64218 files and directories currently installed.) Preparing to unpack otelcol-contrib_0.75.0_linux_amd64.deb ... Unpacking otelcol-contrib (0.75.0) ... Setting up otelcol-contrib (0.75.0) .</description></item><item><title>OpenTelemetry Collector Extensions</title><link>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/2-extensions/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/2-extensions/index.html</guid><description>Extensions are available primarily for tasks that do not involve processing telemetry data. Examples of extensions include health monitoring, service discovery, and data forwarding. Extensions are optional.
Let&amp;rsquo;s edit the config.yaml file and configure the extensions. Note that the pprof and zpages extensions are already configured in the default config.yaml file. We will only be updating the health_check extension.
sudo vi /etc/otelcol-contrib/config.yaml Extensions Configuration Extensions Configuration Complete extensions: health_check: endpoint: 0.</description></item><item><title>OpenTelemetry Collector Receivers</title><link>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/3-receivers/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/3-receivers/index.html</guid><description>A receiver, which can be push or pull based, is how data gets into the Collector. Receivers may support one or more data sources. Generally, a receiver accepts data in a specified format, translates it into the internal format and passes it to processors and exporters defined in the applicable pipelines.
Host Metrics Receiver The Host Metrics Receiver generates metrics about the host system scraped from various sources. This is intended to be used when the collector is deployed as an agent which is what we will be doing in this workshop.</description></item><item><title>OpenTelemetry Collector Processors</title><link>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/4-processors/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/4-processors/index.html</guid><description>Processors are run on data between being received and being exported. Processors are optional though some are recommended. There are a large number of processors included in the OpenTelemetry contrib Collector.
Batch Processor By default, only the batch processor is enabled. This processor is used to batch up data before it is exported. This is useful for reducing the number of network calls made to exporters. For this workshop we will accept the defaults (send_batch_size: 8192, timeout: 200ms, send_batch_size_max: 0).</description></item><item><title>OpenTelemetry Collector Exporters</title><link>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/5-exporters/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/5-exporters/index.html</guid><description>An exporter, which can be push or pull based, is how you send data to one or more backends/destinations. Exporters may support one or more data sources.
exporters: logging: verbosity: detailed otlphttp: metrics_endpoint: https://ingest.eu0.signalfx.com/v2/datapoint/otlp compression: gzip headers: X-SF-TOKEN: &amp;lt;redacted&amp;gt;</description></item><item><title>OpenTelemetry Collector Service</title><link>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/6-service/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/6-service/index.html</guid><description>The Service section is used to configure what components are enabled in the Collector based on the configuration found in the receivers, processors, exporters, and extensions sections. If a component is configured, but not defined within the service section then it is not enabled. The service section consists of three sub-sections:
extensions pipelines telemetry In the default configuration the extension section has been configured to enable health_check, pprof and zpages which we configured in the Extensions module earlier.</description></item><item><title>Data Visualisations</title><link>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/7-visualisation/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.86/en/conf/opentelemetry-collector/7-visualisation/index.html</guid><description> Attachments dashboard_OTel-Contrib-Dashboard.json (37 KB)</description></item></channel></rss>