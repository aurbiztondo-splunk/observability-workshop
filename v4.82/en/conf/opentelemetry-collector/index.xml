<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Newbie to Ninja - OpenTelemetry Collector on Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v4.82/en/conf/opentelemetry-collector/index.html</link><description>Recent content in Newbie to Ninja - OpenTelemetry Collector on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://splunk.github.io/observability-workshop/v4.82/en/conf/opentelemetry-collector/index.xml" rel="self" type="application/rss+xml"/><item><title>Installing OpenTelemetry Collector Contrib</title><link>https://splunk.github.io/observability-workshop/v4.82/en/conf/opentelemetry-collector/1-installation/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.82/en/conf/opentelemetry-collector/1-installation/index.html</guid><description>1. Downloading the OpenTelemetry Collector Contrib distribution Obtain the .deb package for your platform from the OpenTelemetry Collector Contrib releases page
wget https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.75.0/otelcol-contrib_0.75.0_linux_amd64.deb 2. Installing the OpenTelemetry Collector Contrib distribution Install the .deb package using dpkg:
sudo dpkg -i otelcol-contrib_0.75.0_linux_amd64.deb Selecting previously unselected package otelcol-contrib. (Reading database ... 64218 files and directories currently installed.) Preparing to unpack otelcol-contrib_0.75.0_linux_amd64.deb ... Unpacking otelcol-contrib (0.75.0) ... Setting up otelcol-contrib (0.75.0) ... Created symlink /etc/systemd/system/multi-user.</description></item><item><title>OpenTelemetry Collector Extensions</title><link>https://splunk.github.io/observability-workshop/v4.82/en/conf/opentelemetry-collector/2-extensions/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.82/en/conf/opentelemetry-collector/2-extensions/index.html</guid><description>Extensions are available primarily for tasks that do not involve processing telemetry data. Examples of extensions include health monitoring, service discovery, and data forwarding. Extensions are optional.
Let&amp;rsquo;s edit the config.yaml file to add the following extensions:
sudo vi /etc/otelcol-contrib/config.yaml extensions: health_check: endpoint: 0.0.0.0:13133 pprof: endpoint: 0.0.0.0:1777 zpages: endpoint: 0.0.0.0:55679 Restart the collector:
sudo systemctl restart otelcol-contrib Health Check curl http://localhost:13133 {&amp;#34;status&amp;#34;:&amp;#34;Server available&amp;#34;,&amp;#34;upSince&amp;#34;:&amp;#34;2023-04-27T10:11:22.153295874+01:00&amp;#34;,&amp;#34;uptime&amp;#34;:&amp;#34;16m24.684476004s&amp;#34;} Performance Profiler zPages Tip Install a text-based web browser (or use your local browser using the instance IP address)</description></item><item><title>OpenTelemetry Collector Receivers</title><link>https://splunk.github.io/observability-workshop/v4.82/en/conf/opentelemetry-collector/3-receivers/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.82/en/conf/opentelemetry-collector/3-receivers/index.html</guid><description>A receiver, which can be push or pull based, is how data gets into the Collector. Receivers may support one or more data sources.
Host Metrics Receiver hostmetrics: collection_interval: 10s scrapers: cpu: disk: filesystem: memory: network: # System load average metrics https://en.wikipedia.org/wiki/Load_(computing) load: # Paging/Swap space utilization and I/O metrics paging: # Aggregated system process count metrics processes: # System processes metrics, disabled by default # process:</description></item><item><title>OpenTelemetry Collector Processors</title><link>https://splunk.github.io/observability-workshop/v4.82/en/conf/opentelemetry-collector/4-processors/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.82/en/conf/opentelemetry-collector/4-processors/index.html</guid><description>Processors are run on data between being received and being exported. Processors are optional though some are recommended.
processors: batch: resourcedetection: detectors: [system] override: true</description></item><item><title>OpenTelemetry Collector Exporters</title><link>https://splunk.github.io/observability-workshop/v4.82/en/conf/opentelemetry-collector/5-exporters/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.82/en/conf/opentelemetry-collector/5-exporters/index.html</guid><description>An exporter, which can be push or pull based, is how you send data to one or more backends/destinations. Exporters may support one or more data sources.
exporters: logging: verbosity: detailed otlphttp: metrics_endpoint: https://ingest.eu0.signalfx.com/v2/datapoint/otlp compression: gzip headers: X-SF-TOKEN: &amp;lt;redacted&amp;gt; service: pipelines: traces: receivers: [otlp, opencensus, jaeger, zipkin] processors: [batch] exporters: [logging] metrics: receivers: [otlp, opencensus, prometheus, hostmetrics] processors: [batch, resourcedetection] exporters: [logging, otlphttp]</description></item><item><title>Data Visualisations</title><link>https://splunk.github.io/observability-workshop/v4.82/en/conf/opentelemetry-collector/6-visualisation/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.82/en/conf/opentelemetry-collector/6-visualisation/index.html</guid><description> Attachments dashboard_OTel-Contrib-Dashboard.json (37 KB)</description></item></channel></rss>